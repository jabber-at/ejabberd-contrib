Source: ejabberd-modules
Section: net
Priority: optional
Maintainer: Mathias Ertl <mati@jabber.at>
Build-Depends: debhelper (>= 11~), erlang-base, erlang-dev, erlang-tools, ejabberd (>= 18.04-2~), rebar (>= 2.6.0)
Standards-Version: 4.1.5
Homepage: https://github.com/processone/ejabberd-contrib
VCS-Git: https://github.com/mathiasertl/ejabberd-modules.git
VCS-Browser: https://github.com/mathiasertl/ejabberd-modules

Package: ejabberd-contrib
Architecture: all
Depends: erlang-base (>= 1:17) | ${erlang-abi:Depends}, ${erlang:Depends}, ${misc:Depends},
 ejabberd (=${ejabberd}),
 ejabberd-mod-cron,
 ejabberd-mod-log-chat,
 ejabberd-mod-logsession,
 ejabberd-mod-logxml,
 ejabberd-mod-message-log,
 ejabberd-mod-muc-log-http,
 ejabberd-mod-post-log,
 ejabberd-mod-pottymouth,
 ejabberd-mod-rest,
 ejabberd-mod-s2s-log,
 ejabberd-mod-shcommands,
 ejabberd-mod-statsdx,
 ejabberd-mod-webpresence
Description: user-contributed modules for ejabberd (metapackage)
 This package depends on all available modules from ejabberd-contrib,
 but doesn't do or add anything itself.
 .
 This is a pure metapackage.

#Package: ejabberd-mod-auth-http
#Architecture: any
#Depends: erlang-base (>= 1:17) | ${erlang-abi:Depends}, ${erlang:Depends}, ejabberd (=${ejabberd}), ${misc:Depends}
#Description: authenticate against an external REST API
# This module allows ejabberd to authenticate user accounts against an external
# REST API. This module is useful if you have a central user database you want
# to share with ejabberd.

Package: ejabberd-mod-cron
Architecture: any
Depends: erlang-base (>= 1:17) | ${erlang-abi:Depends}, ${erlang:Depends}, ejabberd (=${ejabberd}), ${misc:Depends}
Description: execute scheduled commands
 This module allows advanced ejabberd administrators to schedule commands for
 periodic and automatic execution. Each time a scheduled task finishes its
 execution, a message is printed in the ejabberd log file.

Package: ejabberd-mod-graphite
Architecture: any
Depends: erlang-base (>= 1:17) | ${erlang-abi:Depends}, ${erlang:Depends}, ejabberd (=${ejabberd}), ${misc:Depends}
Description: Gathers statistics and publishes via statsd/graphite.
 This module implements logging to statsd/graphite.

Package: ejabberd-mod-log-chat
Architecture: any
Depends: erlang-base (>= 1:17) | ${erlang-abi:Depends}, ${erlang:Depends}, ejabberd (=${ejabberd}), ${misc:Depends}
Description: logs chat messages to text or html
 mod_log_chat is an ejabberd module aimed at logging chat messages in
 text files. mod_log_chat creates one file per couple of chatters and
 per day (it doesn't log muc messages, use mod_muc_log for this).
 .
 It can store messages in plain text or HTML format.

Package: ejabberd-mod-logsession
Architecture: any
Depends: erlang-base (>= 1:17) | ${erlang-abi:Depends}, ${erlang:Depends}, ejabberd (=${ejabberd}), ${misc:Depends}
Description: logs session connections to a text file
 This module is intended to log the session connections in a text file.
 Right now it only logs the forbidden connection attempts and the
 failed authentication attempts.
 .
 Each vhost is logged in a different file.

Package: ejabberd-mod-logxml
Architecture: any
Depends: erlang-base (>= 1:17) | ${erlang-abi:Depends}, ${erlang:Depends}, ejabberd (=${ejabberd}), ${misc:Depends}
Description: logs XMPP packets to an XML file
 This module sniffs all the XMPP traffic sent and received by ejabberd,
 both internally and externally transmitted. It logs the XMPP packets
 to an XML formatted file. It's possible to filter transmitted packets
 by orientation, stanza and direction. It's possible to configure the
 file rotation rules and intervals.

Package: ejabberd-mod-message-log
Architecture: any
Depends: erlang-base (>= 1:17) | ${erlang-abi:Depends}, ${erlang:Depends}, ejabberd (=${ejabberd}), ${misc:Depends}
Description: writes a line for each message to a log file
 This module writes a line for each sent or received message to a log file.
 Each line mentions the sender's JID and the recipient's JID, and also the
 message type (e.g., "normal", "chat", or "groupchat").  Carbon copies are
 marked as such.

Package: ejabberd-mod-muc-log-http
Architecture: any
Depends: erlang-base (>= 1:17) | ${erlang-abi:Depends}, ${erlang:Depends}, ejabberd (=${ejabberd}), ${misc:Depends}
Description: serves MUC logs on the web
 This module serves the directory containing MUC logs already configured on
 mod_muc_log. This way there is no need to set up a separate web server to
 allow your users to view the MUC logs.  It is a small modification of
 mod_http_fileserver, customized for log serving.

Package: ejabberd-mod-post-log
Architecture: any
Depends: erlang-base (>= 1:17) | ${erlang-abi:Depends}, ${erlang:Depends}, ejabberd (=${ejabberd}), ${misc:Depends}
Description: logs all messages to an HTTP API
 This module implements logging of all messages sent (chat and groupchat) via
 an HTTP API.
 Simply activate the module in ejabberd.yml after installation, see the included
 README.txt for further information.

Package: ejabberd-mod-pottymouth
Architecture: any
Depends: erlang-base (>= 1:17) | ${erlang-abi:Depends}, ${erlang:Depends}, ejabberd (=${ejabberd}), ${misc:Depends}
Description: filter for ejabberd messages using blacklists
 The 'mod_pottymouth' ejabberd module aims to fill the void left by 'mod_shit'
 which has disappeared from the net. It allows individual whole words of a
 message to be filtered against a blacklist. It allows multiple blacklists
 sharded by language. To make use of this module the client must add the
 xml:lang attribute to the message xml.

Package: ejabberd-mod-rest
Architecture: any
Depends: erlang-base (>= 1:17) | ${erlang-abi:Depends}, ${erlang:Depends}, ejabberd (=${ejabberd}), ${misc:Depends}
Description: HTTP interface to POST arbitrary stanzas to ejabberd
 This is an ejabberd module that adds an HTTP handler that allows HTTP
 clients to literally post arbitrary message stanzas to ejabberd. Those
 stanzas then get shoved through ejabberd's router just like any other
 stanza.
 .
 This module can also be used as a frontend to execute ejabberd commands.

Package: ejabberd-mod-s2s-log
Architecture: any
Depends: erlang-base (>= 1:17) | ${erlang-abi:Depends}, ${erlang:Depends}, ejabberd (=${ejabberd}), ${misc:Depends}
Description: logs XMPP s2s connections
 This module can be used to keep a track of other XMPP servers your server has
 been connected with.
 Simply activate the module in ejabberd.yml after installation, see the included
 README.txt for further information.

Package: ejabberd-mod-shcommands
Architecture: any
Depends: erlang-base (>= 1:17) | ${erlang-abi:Depends}, ${erlang:Depends}, ejabberd (=${ejabberd}), ${misc:Depends}
Description: execute shell commands via XMPP (dangerous!)
 WARNING: USE THIS MODULE AT YOUR OWN RISK !!!
 This module allows ejabberd administrators to remotely execute shell commands
 which could compromise both the ejabberd server and the whole machine.
 .
 This module provides the ejabberd server administrator a method to remotely
 execute shell commands through the ejabberd server.
 .
 It provides a page in the ejabberd Web Admin which only the administrators of
 the whole server can access.
 .
 Three types of commands are possible:
  * ejabberd_ctl: makes a call to ejabberd_ctl;
  * erlang shell: executes an erlang command;
  * system shell: executes a command on the system shell.
 The result of the execution will be shown.
 .
 In the system shell, only non-interactive commands will work correctly,
 for example this will work:
  ps -all
 Don't use commands that start an interactive mode:
 DON'T TRY THIS: top
 DON'T TRY THIS: vim readme.txt
 .
 This module does not check if the commands are dangerous or problematic,
 so this module is only recommended for experienced ejabberd and Erlang/OTP
 administrators. USE THIS MODULE AT YOUR OWN RISK !!!

Package: ejabberd-mod-statsdx
Architecture: any
Depends: erlang-base (>= 1:17) | ${erlang-abi:Depends}, ${erlang:Depends}, ejabberd (=${ejabberd}), ${misc:Depends}
Description: calculates and gathers statistics actively
 This module measures several statistics. It provides a new section in
 ejabberd Web Admin and two ejabberd commands to view the information.
 Simply activate the module in ejabberd.yml after installation, see the included
 README.txt for further information.

Package: ejabberd-mod-webpresence
Architecture: any
Depends: erlang-base (>= 1:17) | ${erlang-abi:Depends}, ${erlang:Depends}, ejabberd (=${ejabberd}), ${misc:Depends}
Description: allows any local ejabberd user to publish his presence information
 This module allows any local user of the ejabberd server to publish his
 presence information on the web.
 This module is the successor of Igor Goryachev's mod_presence.
 .
 Allowed output methods are:
  * icons (various themes available);
  * status text;
  * raw XML;
  * avatar, stored in the user's vCard.
 .
 No web server, database, additional libraries or programs are required.
